callout pgm_get_next_pixel;
callout start_caliper;
callout pgm_get_rows;
callout pgm_get_cols;
callout pgm_write_next_pixel;
callout end_caliper;
callout pgm_open_for_write;
callout pgm_open_for_read;
callout pgm_close;

// Shift image left by 30 pixels
int image[130000];
int cols, rows, size;
void read() {
  int i, j;
  pgm_open_for_read("saman.pgm");
  cols = pgm_get_cols();
  rows = pgm_get_rows();
  size = cols * rows;
  for(i = 0, rows) {
    for(j = 0, cols) {
      image[i*303+j] = pgm_get_next_pixel();
    }
  }
  pgm_close();
}
void write() {
  int i, j;
  pgm_open_for_write("saman_sl.pgm", cols, rows);
  size = cols * rows;
  for(i = 0, rows) {
    for(j = 0, cols) {
      pgm_write_next_pixel(image[i*303+j]);
    }
  }
  pgm_close();
}
void shift_left() {
  int i, j;
  for(i = 0, rows) {
    for(j = 0, cols - 30) {
      image[i*303+j] = image[i*303+j+30];
    }
  }
  for(i = 0, rows) {
    for(j = cols - 30, cols) {
      image[i*303+j] = 0;
    }
  }
}
void main() {
  read();
  start_caliper();
  shift_left();
  end_caliper();
  write();
}
