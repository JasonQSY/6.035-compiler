callout pgm_get_next_pixel;
callout start_caliper;
callout pgm_get_rows;
callout pgm_get_cols;
callout pgm_write_next_pixel;
callout end_caliper;
callout pgm_open_for_write;
callout pgm_open_for_read;
callout pgm_close;

// Negative of a black and white pgm image.
int image[130000];
int cols, rows, size;
void read() {
  int i, j;
  pgm_open_for_read( "saman.pgm");
  cols = pgm_get_cols();
  rows = pgm_get_rows();
  size = cols * rows;
  for( i = 0, rows) {
    for( j = 0, cols) {
      image[i*303+j] = pgm_get_next_pixel();
    }
  }
  pgm_close();
}
void write() {
  int i, j;
  pgm_open_for_write( "saman_negative.pgm", cols, rows);
  size = cols * rows;
  for( i = 0, rows) {
    for( j = 0, cols) {
      pgm_write_next_pixel( image[i*303+j]);
    }
  }
  pgm_close();
}
void invert() {
  int i, j;
  for( i = 0, rows) {
    for( j = 0, cols) {
      image[i*303+j] = 255 - image[i*303+j];
    }
  }
}
void main() {
  read();
  start_caliper();
  invert();
  end_caliper();
  write();
}
